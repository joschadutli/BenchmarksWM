plot.ci=TRUE, ci.l=ci.l, ci.u=ci.u, ci.color="black")
legend(5.5,0.95*max(ylim), legend=lgd, col=c("white", "black","black"), density=c(0,15,30))
par(new=T)
for (cat in 1:4) {
errbar(c(0.5,1.4,2.3)+0.25+(cat-1)*(0.45+3*0.9), mpred[,cat], yplus=cipred.u[,cat], yminus=cipred.l[,cat],
xlim=c(0,2.5), ylim=ylim, add=T, type="p", col="red", errbar.col="red")
}
c(0.5,1.4,2.3)+0.25+(cat-1)*(0.45+3*0.9)
cat
# bar plot with bars = data, red dots = predictions
x11()
#layout(matrix(1:4,2,2, byrow=T))
#par(cex=0.9)
#titletext = c("Correct", "Other Item", "Dist", "NPL")
xlim <- c(0,11)
lgd = c("New Distractors", "Old Reordered", "Old Same")
barplot2(height=m, width=0.9, space = rep(c(0.5, 0, 0),4), legend.text=F,
beside = TRUE, xlim=xlim, ylim=ylim, xpd=F,
density=c(0, 15, 30), angle=45, col=c("white", "black", "black"), prcol="white", border="black",
names.arg = c("Correct", "Other Item",  "NPL", "Distractor"),
xlab="", ylab="Proportion Responses",
plot.ci=TRUE, ci.l=ci.l, ci.u=ci.u, ci.color="black")
legend(5.5,0.95*max(ylim), legend=lgd, col=c("white", "black","black"), density=c(0,15,30))
par(new=T)
for (cat in 1:4) {
errbar(c(0.5,1.4,2.3)+0.25+(cat-1)*(0.45+3*0.9), mpred[,cat], yplus=cipred.u[,cat], yminus=cipred.l[,cat],
xlim=xlim, ylim=ylim, add=T, type="p", col="red", errbar.col="red")
}
x11()
#layout(matrix(1:4,2,2, byrow=T))
#par(cex=0.9)
#titletext = c("Correct", "Other Item", "Dist", "NPL")
xlim <- c(0,12)
lgd = c("New Distractors", "Old Reordered", "Old Same")
barplot2(height=m, width=0.9, space = rep(c(0.5, 0, 0),4), legend.text=F,
beside = TRUE, xlim=xlim, ylim=ylim, xpd=F,
density=c(0, 15, 30), angle=45, col=c("white", "black", "black"), prcol="white", border="black",
names.arg = c("Correct", "Other Item",  "NPL", "Distractor"),
xlab="", ylab="Proportion Responses",
plot.ci=TRUE, ci.l=ci.l, ci.u=ci.u, ci.color="black")
legend(5.5,0.95*max(ylim), legend=lgd, col=c("white", "black","black"), density=c(0,15,30))
par(new=T)
for (cat in 1:4) {
errbar(c(0.5,1.4,2.3)+0.25+(cat-1)*(0.45+3*0.9), mpred[,cat], yplus=cipred.u[,cat], yminus=cipred.l[,cat],
xlim=xlim, ylim=ylim, add=T, type="p", col="red", errbar.col="red")
}
## Now for Prob (individual choices)
m <- matrix(0,3,4)
std <- matrix(0,3,4)
ci.u <- matrix(0,3,4)
ci.l <- matrix(0,3,4)
mpred <- matrix(0,3,4)
stdpred <- matrix(0,3,4)
cipred.u <- matrix(0,3,4)
cipred.l <- matrix(0,3,4)
for (cat in 1:3) {
pdatprob <- datProb[,c(cat, cat+4, cat+7)]   # pick out the response category for conditions 1 to 3
# Bakeman-McArthur adjustment
rmean = rowMeans(pdatprob)
pcdatprob <- pdatprob - rmean + mean(rmean)
#computation of CI
for (c in 1:3) {
m[c,cat] <- mean(pcdatprob[,c])
std[c,cat] <- sd(pcdatprob[,c])
ci.u[c,cat] <- m[c,cat] + 1.96*std[c,cat]/sqrt(nsubj)
ci.l[c,cat] <- m[c,cat] - 1.96*std[c,cat]/sqrt(nsubj)
}
ppredprob <- predProb[,c(cat, cat+4, cat+7)]
# Bakeman-McArthur adjustment
rmean = rowMeans(ppredprob)
pcpredprob <- ppredprob - rmean + mean(rmean)
#computation of CI
for (c in 1:3) {
mpred[c,cat] <- mean(pcpredprob[,c])
stdpred[c,cat] <- sd(pcpredprob[,c])
cipred.u[c,cat] <- mpred[c,cat] + 1.96*stdpred[c,cat]/sqrt(nsubj)
cipred.l[c,cat] <- mpred[c,cat] - 1.96*stdpred[c,cat]/sqrt(nsubj)
}
}
# now take care of distractors (response category 4)
pdatprob <- datProb[,4]
m[1,4] <- mean(pdatprob)
ci.u[1,4] <- m[1,4] + 1.96*std[1,3]/sqrt(nsubj)  # use CI for NPLs
ci.l[1,4] <- m[1,4] - 1.96*std[1,3]/sqrt(nsubj)  # use CI for NPLs
ppredprob <- predProb[,4]
mpred[1,4] <- mean(ppredprob)
cipred.u[1,4] <- mpred[1,4] + 1.96*stdpred[1,3]/sqrt(nsubj)  # use CI for NPLs
cipred.l[1,4] <- mpred[1,4] - 1.96*stdpred[1,3]/sqrt(nsubj)  # use CI for NPLs
mpred[2:3,4] <- -1
cipred.u[2:3,4] <- -1
cipred.l[2:3,4] <- -1
xlim <- c(0,12)
ylim <- c(0,1)
lgd = c("New Distractors", "Old Reordered", "Old Same")
x11()
barplot2(height=m, width=0.9, space = rep(c(0.5, 0, 0),4), legend.text=F,
beside = TRUE, xlim=xlim, ylim=ylim, xpd=F,
density=c(0, 15, 30), angle=45, col=c("white", "black", "black"), prcol="white", border="black",
names.arg = c("Correct", "Other Item",  "NPL", "Distractor"),
xlab="", ylab="P(Choice)",
plot.ci=TRUE, ci.l=ci.l, ci.u=ci.u, ci.color="black")
legend(5.5,0.95*max(ylim), legend=lgd, col=c("white", "black","black"), density=c(0,15,30))
par(new=T)
for (cat in 1:4) {
errbar(c(0.5,1.4,2.3)+0.25+(cat-1)*(0.45+3*0.9), mpred[,cat], yplus=cipred.u[,cat], yminus=cipred.l[,cat],
xlim=xlim, ylim=ylim, add=T, type="p", col="red", errbar.col="red")
}
source('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta53.R', echo=TRUE)
source('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta53.R', echo=TRUE)
source('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta53.R', echo=TRUE)
WAIC
x11(7,5)
if (version == 1) layout(matrix(c(1,2,3,4,5,0,6,7,0), 3, 3, byrow=T))
if (version == 2) layout(matrix(1:6, 2, 3, byrow=T))
Cx <- 1.2
for (p in 1:length(parnames)) {
Parnames <- NULL
for (id in 1:nsubj) {
if (version == 1) {
subjectparameters <- c("C", "A", "D", "dC", "dA", "dC", "dA")
cond <- regmatches(parnames[p], regexpr(pattern="[[:digit:]]", parnames[p]))  # regexpr returns an object with the matching character position, regmatches extracts the actual matching character
if (length(cond)>0) suffix <- paste0(",", cond) else suffix <- ""
Parnames <- c(Parnames, paste(subjectparameters[p], "[", as.character(id), suffix, "]", sep="") )
} else {
Parnames <- c(Parnames, paste(subjectparameters[p], "[", as.character(id), "]", sep="") )
}
}
mPchain <- rowMeans(mcmcChain[,Parnames])
subjparname <- tolower(regmatches(subjectparameters[p], regexpr("[A-D]", subjectparameters[p])))
if (length(grep("d", subjectparameters[p])) > 0) {
if (version == 1) subjparname <- paste0(subjparname, cond)
plotPostKO(mPchain, xlab=bquote( paste("Mean of ", Delta,  .(subjparname)) ),
breaks=30, cex=Cx, cex.lab=Cx, cex.axis=Cx)
} else {
plotPostKO(mPchain, xlab=paste0("Mean of ", subjparname),
breaks=30, cex=Cx, cex.lab=Cx, cex.axis=Cx)
}
}
m <- matrix(0,3,4)
std <- matrix(0,3,4)
ci.u <- matrix(0,3,4)
ci.l <- matrix(0,3,4)
mpred <- matrix(0,3,4)
stdpred <- matrix(0,3,4)
cipred.u <- matrix(0,3,4)
cipred.l <- matrix(0,3,4)
for (cat in 1:3) {
pdat <- datP[,c(cat, cat+4, cat+7)]   # pick out the response category for conditions 1 to 3
# Bakeman-McArthur adjustment
rmean = rowMeans(pdat)
pcdat <- pdat - rmean + mean(rmean)
#computation of CI
for (c in 1:3) {
m[c,cat] <- mean(pcdat[,c])
std[c,cat] <- sd(pcdat[,c])
ci.u[c,cat] <- m[c,cat] + 1.96*std[c,cat]/sqrt(nsubj)
ci.l[c,cat] <- m[c,cat] - 1.96*std[c,cat]/sqrt(nsubj)
}
ppred <- predP[,c(cat, cat+4, cat+7)]
# Bakeman-McArthur adjustment
rmean = rowMeans(ppred)
pcpred <- ppred - rmean + mean(rmean)
#computation of CI
for (c in 1:3) {
mpred[c,cat] <- mean(pcpred[,c])
stdpred[c,cat] <- sd(pcpred[,c])
cipred.u[c,cat] <- mpred[c,cat] + 1.96*stdpred[c,cat]/sqrt(nsubj)
cipred.l[c,cat] <- mpred[c,cat] - 1.96*stdpred[c,cat]/sqrt(nsubj)
}
}
# now take care of distractors (response category 4)
pdat <- datP[,4]
m[1,4] <- mean(pdat)
ci.u[1,4] <- m[1,4] + 1.96*std[1,3]/sqrt(nsubj)  # use CI for NPLs
ci.l[1,4] <- m[1,4] - 1.96*std[1,3]/sqrt(nsubj)  # use CI for NPLs
ppred <- predP[,4]
mpred[1,4] <- mean(ppred)
cipred.u[1,4] <- mpred[1,4] + 1.96*stdpred[1,3]/sqrt(nsubj)  # use CI for NPLs
cipred.l[1,4] <- mpred[1,4] - 1.96*stdpred[1,3]/sqrt(nsubj)  # use CI for NPLs
mpred[2:3,4] <- -1
cipred.u[2:3,4] <- -1
cipred.l[2:3,4] <- -1
# bar plot with bars = data, red dots = predictions
xlim <- c(0,12)
ylim <- c(0,1)
lgd = c("New Distractors", "Old Reordered", "Old Same")
x11(7,5)
barplot2(height=m, width=0.9, space = rep(c(0.5, 0, 0),4), legend.text=F,
beside = TRUE, xlim=xlim, ylim=ylim, xpd=F,
density=c(0, 15, 30), angle=45, col=c("white", "black", "black"), prcol="white", border="black",
names.arg = c("Correct", "Other Item",  "NPL", "Distractor"),
xlab="", ylab="Proportion Responses",
plot.ci=TRUE, ci.l=ci.l, ci.u=ci.u, ci.color="black")
legend(5.5,0.95*max(ylim), legend=lgd, col=c("white", "black","black"), density=c(0,15,30))
par(new=T)
for (cat in 1:4) {
errbar(c(0.5,1.4,2.3)+0.25+(cat-1)*(0.45+3*0.9), mpred[,cat], yplus=cipred.u[,cat], yminus=cipred.l[,cat],
xlim=xlim, ylim=ylim, add=T, type="p", col="red", errbar.col="red")
}
source('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta53.R', echo=TRUE)
x11()
x11()
x11()
dev.set()4
dev.set(4)
plot(2,2)
dev.set(6)
plot(3,3)
dev.off(all)
graphics.off
graphics.off()
x11()
graphics.off()
debugSource('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta43.R', echo=TRUE)
Parnames
parnames
source('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta43_newPlot.R', echo=TRUE)
source('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta43_newPlot.R', echo=TRUE)
source('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta43_newPlot.R', echo=TRUE)
debugSource('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta43_newPlot.R', echo=TRUE)
debugSource('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta43_newPlot.R', echo=TRUE)
debugSource('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta43_newPlot.R', echo=TRUE)
p
chainIdx
head(plotChain)
colMeans(plotChain)
subjparname
subjparname
chainIdx
source('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta43_newPlot.R', echo=TRUE)
chainIdx
subjectparameters
source('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta43_newPlot.R', echo=TRUE)
source('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta43_newPlot.R', echo=TRUE)
graphics.off()
rm(list=ls(all=TRUE))
source('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta43.R', echo=TRUE)
diagnostics <- gelman.diag(codaSamples[, parnames])
RHat <- diagnostics$mpsrf  #extracts the multivariate Rhat estimate
print(RHat)
source('C:/Daten/R/Projects/GMM/CspanActBind/CspanActBindDelta43.R', echo=TRUE)
source('C:/Daten/R/Projects/GMM/CspanR_ParRecovery.R', echo=TRUE)
setwd("C:/Daten/R/Projects/GMM")
source('C:/Daten/R/Projects/GMM/CspanR_ParRecovery.R', echo=TRUE)
source('C:/Daten/R/Projects/GMM/CspanR_ParRecovery.R', echo=TRUE)
source('C:/Daten/R/Projects/GMM/ToniUpdate_ParRecovery.R', echo=TRUE)
source('C:/Daten/R/Projects/GMM/ToniUpdate_ParRecovery.R', echo=TRUE)
parameters
source('C:/Daten/R/Projects/GMM/ToniUpdate_ParRecovery.R', echo=TRUE)
RHat
source('C:/Daten/R/Projects/GMM/ToniUpdate_ParRecovery.R', echo=TRUE)
setwd("C:/Daten/R/Projects/BenchmarksWM.Data/BM10.2.ItemSwitchEffects")
source('C:/Daten/R/Projects/BenchmarksWM.Data/BM10.2.ItemSwitchEffects/Hedge&Leonardsscript.R', echo=TRUE)
View(data)
# Analysis of Pairs-Binding Object-Color, PI
graphics.off()
rm(list=ls(all=TRUE))
library(BayesFactor)
source("C:/daten/R/toolbox/lineplot.ci3.R")
source("C:/daten/R/toolbox/wrap.R")
### Read Data
dat <- read.table("C:\\Daten\\Rohdaten\\Pairs.Binding\\PairsOC_PI\\PairsOC_PI_prelim.dat", header=F)
names(dat) <- c("id", "condition", "trial", "testpos", "inpos",
"setsize", "enctime", "delay", "objectIdx", "colorIdx", "order",
"color", "reuse", "response", "deviation", "rt1", "rt2")
source('C:/Daten/R/Projects/Pairs.Binding/PairsBindingOC_PI.R', echo=TRUE)
dat$deviation2 <- wrap(dat$response-dat$color, bound=180)
dat$error <- abs(dat$deviation)
dat$error2 <- abs(dat$deviation2)
dat$error-dat$error2
min(dat$error-dat$error2)
max(dat$error-dat$error2)
aggdat <- aggregate(error ~ id+setsize+condition, data=dat, FUN=mean)
View(aggdat)
source('C:/Daten/R/Projects/Pairs.Binding/PairsBindingOC_PI.R', echo=TRUE)
aggdat <- aggregate(error ~ id+setsize+condition, data=dat, FUN=mean)
x11()
lineplot.ci3(aggdat, dv=4, iv=c(2,3), x=2, type="b", ylim=c(0,90) )
aggdat <- aggregate(error ~ id+setsize+condition, data=dat, FUN=mean)
x11()
lineplot.ci3(aggdat, dv=4, iv=c(2,3), x=2, ylim=c(0,90) )
x11()
lineplot.ci3(aggdat, dv="error", iv=c("setsize", "condition"), x=2, ylim=c(0,90) )
x11()
lineplot.ci3(aggdat, dv="error", iv=c("setsize", "condition"), x=1, ylim=c(0,90) )
x11()
lineplot.ci3(aggdat, dv="error", iv=c("setsize", "condition"), x=1, ylim=c(0,90) xlab="Set Size", ylab="Error (Deg)"))
x11()
lineplot.ci3(aggdat, dv="error", iv=c("setsize", "condition"), x=1, ylim=c(0,90), xlab="Set Size", ylab="Error (Deg)")
x11()
lineplot.ci3(aggdat, dv="error", iv=c("setsize", "condition"), x=1, ylim=c(0,90), xlab="Set Size", ylab="Error (Deg)",
pt=c(21,22), col=c("white", "black"))
x11()
lineplot.ci3(aggdat, dv="error", iv=c("setsize", "condition"), x=1, ylim=c(0,90), xlab="Set Size", ylab="Error (Deg)",
pt=c(21,22), ptcol=c("white", "black"))
legend(1,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"))
legend(1,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"), yjust=1)
legend(1,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"), yjust=0)
x11()
lineplot.ci3(aggdat, dv="error", iv=c("setsize", "condition"), x=1, ylim=c(0,90), xlab="Set Size", ylab="Error (Deg)",
pt=c(21,22), ptcol=c("white", "black"))
legend(1,0, c("Low PI", "High PI"), type="b", pch=c(21,22), pt.bg=c("white", "black"), yjust=0)
x11()
lineplot.ci3(aggdat, dv="error", iv=c("setsize", "condition"), x=1, ylim=c(0,90), xlab="Set Size", ylab="Error (Deg)",
pt=c(21,22), ptcol=c("white", "black"))
legend(1,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"), yjust=0)
x11()
lineplot.ci3(aggdat, dv="error", iv=c("setsize", "condition"), x=1, ylim=c(0,90), xlab="Set Size", ylab="Error (Deg)",
pt=c(21,22), ptcol=c("white", "black"))
legend(7,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"), yjust=0)
source('C:/Daten/R/Projects/Pairs.Binding/PairsBindingOC_PI.R', echo=TRUE)
Condtext <- c("Low PI", "High PI")
for (cond in 1:2) {
x11()
layout(matrix(1:6, 2,3, byrow=T))
for (ss in c(1,2,3,4,6,8)) {
subdat <- subset(dat, setsize==ss)
hist(subdat$deviation, breaks=30, main=paste0(Condtext[cond], ", Setsize: ", as.character(ss)), xlim=c(-190, 190))
}
}
unique(dat$enctime)
source('C:/Daten/R/Projects/Pairs.Binding/PairsBindingOC_PI.R', echo=TRUE)
source('C:/Daten/R/Projects/Pairs.Binding/PairsBindingOC_PI.R', echo=TRUE)
x11(9,7)
layout(matrix(1:2,1,2))
for (et in sort(unique(aggdat$enctime))) {
subdat <- subset(aggdat, enctime==et)
lineplot.ci3(subdat, dv="error", iv=c("setsize", "condition"), x=1, ylim=c(0,90), xlab="Set Size", ylab="Error (Deg)",
pt=c(21,22), ptcol=c("white", "black"), main=as.character(et))
legend(8,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"), xjust=1, yjust=0)
}
x11(9,7)
layout(matrix(1:2,1,2))
for (cond in 1:2) {
subdat <- subset(aggdat, condition==cond)
lineplot.ci3(subdat, dv="error", iv=c("setsize", "enctime"), x=1, ylim=c(0,90), xlab="Set Size", ylab="Error (Deg)",
pt=c(21,22), ptcol=c("white", "black"), main=Condtext[cond])
legend(8,0, as.character(sort(unique(dat$enctime))), pch=c(21,22), pt.bg=c("white", "black"), xjust=1, yjust=0)
}
aggdat2 <- aggregate(error ~ id+setsize+condition+enctime+delay, data=dat, FUN=mean)
x11(9,7)
layout(matrix(1:2,1,2))
for (et in sort(unique(aggdat2$enctime))) {
subdat <- subset(aggdat2, enctime==et)
lineplot.ci3(subdat, dv="error", iv=c("setsize", "delay"), x=1, ylim=c(0,90), xlab="Set Size", ylab="Error (Deg)",
pt=c(21,22), ptcol=c("white", "black"), main=as.character(et))
legend(8,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"), xjust=1, yjust=0)
}
unique(aggdat2$delay)
x11(9,7)
layout(matrix(1:2,1,2))
for (et in sort(unique(aggdat2$enctime))) {
subdat <- subset(aggdat2, enctime==et)
lineplot.ci3(subdat, dv="error", iv=c("setsize", "delay"), x=2, ylim=c(0,90), xlab="Set Size", ylab="Error (Deg)",
pt=c(21,22), ptcol=c("white", "black"), main=as.character(et))
legend(8,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"), xjust=1, yjust=0)
}
aggdat2 <- aggregate(error ~ id+setsize+condition+enctime+delay, data=dat, FUN=mean)
setsizecolors <- c("white", "gray80", "gray60", "gray40", "gray20", "black")
x11(9,7)
layout(matrix(1:2,1,2))
for (et in sort(unique(aggdat2$enctime))) {
subdat <- subset(aggdat2, enctime==et)
lineplot.ci3(subdat, dv="error", iv=c("setsize", "delay"), x=2, ylim=c(0,90), xlab="Set Size", ylab="Error (Deg)",
pt=c(21:26), ptcol=setsizecolors, main=as.character(et))
legend(8,0, sort(unique(aggdat2$setsize)), pch=c(21:26), pt.bg=setsizecolors, xjust=1, yjust=0)
}
aggdat2 <- aggregate(error ~ id+setsize+condition+enctime+delay, data=dat, FUN=mean)
setsizecolors <- c("white", "gray80", "gray60", "gray40", "gray20", "black")
x11(9,7)
layout(matrix(1:2,1,2))
for (et in sort(unique(aggdat2$enctime))) {
subdat <- subset(aggdat2, enctime==et)
lineplot.ci3(subdat, dv="error", iv=c("setsize", "delay"), x=2, ylim=c(0,90), xlab="Set Size", ylab="Error (Deg)",
pt=c(21:25, 21), ptcol=setsizecolors, main=as.character(et))
legend(8,0, sort(unique(aggdat2$setsize)), pch=c(21:25, 21), pt.bg=setsizecolors, xjust=1, yjust=0)
}
aggdat2 <- aggregate(error ~ id+setsize+condition+enctime+delay, data=dat, FUN=mean)
setsizecolors <- c("white", "gray80", "gray60", "gray40", "gray20", "black")
x11(9,7)
layout(matrix(1:2,1,2))
for (et in sort(unique(aggdat2$enctime))) {
subdat <- subset(aggdat2, enctime==et)
lineplot.ci3(subdat, dv="error", iv=c("setsize", "delay"), x=2, off=0.1, xlim=c(0.5, 8.5), ylim=c(0,90),
xlab="Set Size", ylab="Error (Deg)",
pt=c(21:25, 21), ptcol=setsizecolors, main=as.character(et))
legend(8,90, sort(unique(aggdat2$setsize)), pch=c(21:25, 21), pt.bg=setsizecolors, xjust=1, yjust=1)
}
aggdat2 <- aggregate(error ~ id+setsize+condition+enctime+delay, data=dat, FUN=mean)
setsizecolors <- c("white", "gray80", "gray60", "gray40", "gray20", "black")
x11(9,7)
layout(matrix(1:2,1,2))
for (et in sort(unique(aggdat2$enctime))) {
subdat <- subset(aggdat2, enctime==et)
lineplot.ci3(subdat, dv="error", iv=c("setsize", "delay"), x=2, off=0.1, xlim=c(0, max(unique(aggdat2$delay))), ylim=c(0,90),
xlab="Delay", ylab="Error (Deg)",
pt=c(21:25, 21), ptcol=setsizecolors, main=as.character(et))
legend(8,90, sort(unique(aggdat2$setsize)), pch=c(21:25, 21), pt.bg=setsizecolors, xjust=1, yjust=1)
}
aggdat2 <- aggregate(error ~ id+setsize+condition+enctime+delay, data=dat, FUN=mean)
setsizecolors <- c("white", "gray80", "gray60", "gray40", "gray20", "black")
x11(9,7)
layout(matrix(1:2,1,2))
for (et in sort(unique(aggdat2$enctime))) {
subdat <- subset(aggdat2, enctime==et)
lineplot.ci3(subdat, dv="error", iv=c("setsize", "delay"), x=2, off=0.1, xlim=c(0, max(unique(aggdat2$delay))), ylim=c(0,90),
xlab="Delay (s)", ylab="Error (Deg)",
pt=c(21:25, 21), ptcol=setsizecolors, main=as.character(et))
legend(8,90, sort(unique(aggdat2$setsize)), pch=c(21:25, 21), pt.bg=setsizecolors, xjust=1, yjust=1)
}
aggdat3 <- aggregate(error ~ id+setsize+condition+enctime+inpos, data=dat, FUN=mean)
aggdat3 <- subset(aggdat3, setsize>3)
for (ss in c(4,6,8)) {
subdat <- subset(aggdat3, setsize==ss)
lineplot.ci3(subdat, dv="error", iv=c("inpos", "condition"), x=1, off=0.1, xlim=c(0, ss), ylim=c(0,90),
xlab="Input Position", ylab="Error (Deg)",
pt=c(21:22), ptcol=c("white", "black"), main=as.character(et))
legend(ss,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"), xjust=1, yjust=0)
}
aggdat3 <- aggregate(error ~ id+setsize+condition+enctime+inpos, data=dat, FUN=mean)
aggdat3 <- subset(aggdat3, setsize>3)
x11(10,7)
layout(matrix(1:3,1,3))
for (ss in c(4,6,8)) {
subdat <- subset(aggdat3, setsize==ss)
lineplot.ci3(subdat, dv="error", iv=c("inpos", "condition"), x=1, off=0.1, xlim=c(0, ss), ylim=c(0,90),
xlab="Input Position", ylab="Error (Deg)",
pt=c(21:22), ptcol=c("white", "black"), main=as.character(et))
legend(ss,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"), xjust=1, yjust=0)
}
aggdat3 <- aggregate(error ~ id+setsize+condition+enctime+inpos, data=dat, FUN=mean)
aggdat3 <- subset(aggdat3, setsize>3)
x11(10,7)
layout(matrix(1:3,1,3))
for (ss in c(4,6,8)) {
subdat <- subset(aggdat3, setsize==ss)
lineplot.ci3(subdat, dv="error", iv=c("inpos", "condition"), x=1, off=0.1, xlim=c(0.5, ss+0.5), ylim=c(0,90),
xlab="Input Position", ylab="Error (Deg)",
pt=c(21:22), ptcol=c("white", "black"), main=as.character(et))
legend(ss,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"), xjust=1, yjust=0)
}
aggdat3 <- aggregate(error ~ id+setsize+condition+enctime+inpos, data=dat, FUN=mean)
aggdat3 <- subset(aggdat3, setsize>3)
x11(10,7)
layout(matrix(1:3,1,3))
for (ss in c(4,6,8)) {
subdat <- subset(aggdat3, setsize==ss)
lineplot.ci3(subdat, dv="error", iv=c("inpos", "condition"), x=1, off=0.1, xlim=c(0.5, ss+0.5), ylim=c(0,90),
xlab="Input Position", ylab="Error (Deg)",
pt=c(21:22), ptcol=c("white", "black"))
legend(ss,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"), xjust=1, yjust=0)
}
x11(10,7)
layout(matrix(1:3,1,3))
for (ss in c(4,6,8)) {
subdat <- subset(aggdat3, setsize==ss)
lineplot.ci3(subdat, dv="error", iv=c("inpos", "enctime"), x=1, off=0.1, xlim=c(0.5, ss+0.5), ylim=c(0,90),
xlab="Input Position", ylab="Error (Deg)",
pt=c(21:22), ptcol=c("white", "black"))
legend(8,0, as.character(sort(unique(dat$enctime))), pch=c(21,22), pt.bg=c("white", "black"), xjust=1, yjust=0)
}
aggdat4 <- aggregate(error ~ id+setsize+condition+enctime+testpos, data=dat, FUN=mean)
aggdat4 <- subset(aggdat4, setsize>3)
x11(10,7)
layout(matrix(1:3,1,3))
for (ss in c(4,6,8)) {
subdat <- subset(aggdat4, setsize==ss)
lineplot.ci3(subdat, dv="error", iv=c("testpos", "condition"), x=1, off=0.1, xlim=c(0.5, ss+0.5), ylim=c(0,90),
xlab="Output Position", ylab="Error (Deg)",
pt=c(21:22), ptcol=c("white", "black"))
legend(ss,0, c("Low PI", "High PI"), pch=c(21,22), pt.bg=c("white", "black"), xjust=1, yjust=0)
}
x11(10,7)
layout(matrix(1:3,1,3))
for (ss in c(4,6,8)) {
subdat <- subset(aggdat4, setsize==ss)
lineplot.ci3(subdat, dv="error", iv=c("testpos", "enctime"), x=1, off=0.1, xlim=c(0.5, ss+0.5), ylim=c(0,90),
xlab="Output Position", ylab="Error (Deg)",
pt=c(21:22), ptcol=c("white", "black"))
legend(8,0, as.character(sort(unique(dat$enctime))), pch=c(21,22), pt.bg=c("white", "black"), xjust=1, yjust=0)
}
source('C:/Daten/R/Projects/Pairs.Binding/PairsBindingOC_PI.R', echo=TRUE)
Condtext <- c("Low PI", "High PI")
Enctimetext <- as.character(sort(unique(dat$enctime)))
Enctimes <- sort(unique(dat$enctime))
for (et in 1:2) {
etime <- Enctimes[et]
for (cond in 1:2) {
x11()
layout(matrix(1:6, 2,3, byrow=T))
for (ss in c(1,2,3,4,6,8)) {
subdat <- subset(dat, setsize==ss & enctime==etime)
hist(subdat$deviation, breaks=30, main=paste0(Condtext[cond], "(", Enctimetext[et], "), Setsize: ", as.character(ss)), xlim=c(-190, 190))
}
}
}
source('C:/Daten/R/Projects/Pairs.Binding/PairsBindingOC_PI.R', echo=TRUE)
source('C:/Daten/R/Projects/Pairs.Binding/PairsBindingOC_PI.R', echo=TRUE)
Condtext <- c("Low PI", "High PI")
Enctimetext <- as.character(sort(unique(dat$enctime)))
Enctimes <- sort(unique(dat$enctime))
for (et in 1:2) {
etime <- Enctimes[et]
for (cond in 1:2) {
x11()
layout(matrix(1:6, 2,3, byrow=T))
for (ss in c(1,2,3,4,6,8)) {
subdat <- subset(dat, setsize==ss & enctime==etime & condition==cond)
hist(subdat$deviation, breaks=30, main=paste0(Condtext[cond], " (", Enctimetext[et], "), Setsize: ", as.character(ss)), xlim=c(-190, 190))
}
}
}
